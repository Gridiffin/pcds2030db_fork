#!/bin/bash

# Local GitHub Actions Simulation Script
# This script runs the same commands that GitHub Actions will execute

echo "üöÄ Starting Local CI Simulation..."
echo "=================================="

# Check if we're in the right directory
if [ ! -f "package.json" ] || [ ! -f "composer.json" ]; then
    echo "‚ùå Error: Please run this script from the project root directory"
    exit 1
fi

echo ""
echo "üì¶ Installing NPM dependencies..."
npm ci
if [ $? -ne 0 ]; then
    echo "‚ùå NPM installation failed"
    exit 1
fi

echo ""
echo "üì¶ Installing Composer dependencies..." 
composer install --prefer-dist --no-progress --optimize-autoloader
if [ $? -ne 0 ]; then
    echo "‚ùå Composer installation failed"
    exit 1
fi

echo ""
echo "üß™ Running PHPUnit backend tests..."
vendor/bin/phpunit --testdox
php_exit_code=$?

echo ""
echo "üß™ Running Jest frontend tests..."
npm test -- --passWithNoTests
jest_exit_code=$?

echo ""
echo "üèóÔ∏è Building production assets..."
npm run build
build_exit_code=$?

echo ""
echo "üîç Running code quality checks..."

# PHP syntax check
echo "Checking PHP syntax..."
find app/ -name "*.php" -exec php -l {} \; > /dev/null 2>&1
php_syntax_exit_code=$?

# NPM security audit
echo "Running NPM security audit..."
npm audit --audit-level=moderate > /dev/null 2>&1
audit_exit_code=$?

echo ""
echo "üìä CI Simulation Results:"
echo "========================"

if [ $php_exit_code -eq 0 ]; then
    echo "‚úÖ PHPUnit Tests: PASSED"
else
    echo "‚ùå PHPUnit Tests: FAILED"
fi

if [ $jest_exit_code -eq 0 ]; then
    echo "‚úÖ Jest Tests: PASSED"
else
    echo "‚ùå Jest Tests: FAILED"
fi

if [ $build_exit_code -eq 0 ]; then
    echo "‚úÖ Asset Build: PASSED"
else
    echo "‚ùå Asset Build: FAILED"
fi

if [ $php_syntax_exit_code -eq 0 ]; then
    echo "‚úÖ PHP Syntax: PASSED"
else
    echo "‚ùå PHP Syntax: FAILED"
fi

if [ $audit_exit_code -eq 0 ]; then
    echo "‚úÖ Security Audit: PASSED"
else
    echo "‚ö†Ô∏è Security Audit: WARNINGS (check manually)"
fi

# Overall result
overall_exit_code=$((php_exit_code + build_exit_code + php_syntax_exit_code))

echo ""
if [ $overall_exit_code -eq 0 ]; then
    echo "üéâ All critical checks PASSED! Ready for deployment."
    exit 0
else
    echo "‚ùå Some critical checks FAILED. Please fix before deploying."
    exit 1
fi

class d{constructor(t){this.app=t,this.elements={},this.lastNotificationHash=null}cacheElements(){this.elements={container:document.querySelector(".notifications-container"),list:document.querySelector(".notifications-list"),loading:document.querySelector(".notifications-loading"),error:document.querySelector(".notifications-error"),success:document.querySelector(".notifications-success"),empty:document.querySelector(".notifications-empty"),stats:document.querySelector(".notifications-stats"),totalCount:document.querySelector(".total-notifications"),unreadCount:document.querySelector(".unread-notifications"),markAllReadBtn:document.querySelector(".mark-all-read-btn"),deleteSelectedBtn:document.querySelector(".delete-selected-btn"),refreshBtn:document.querySelector(".refresh-notifications-btn"),filterBtns:document.querySelectorAll(".notifications-filter-btn"),searchInput:document.querySelector(".notifications-search-input"),searchBtn:document.querySelector(".notifications-search-btn"),clearSearchBtn:document.querySelector(".clear-search-btn"),selectAllCheckbox:document.querySelector(".select-all-notifications"),selectedCount:document.querySelector(".selected-count"),bulkActions:document.querySelector(".bulk-actions"),pagination:document.querySelector(".notifications-pagination"),paginationInfo:document.querySelector(".notifications-pagination-info"),perPageSelect:document.querySelector(".notifications-per-page select")}}renderNotifications(t){this.elements.list||this.cacheElements();try{if(!t||t.length===0){this.showEmpty();return}const e=t.map(i=>this.renderNotificationItem(i)).join("");this.elements.list.innerHTML=e,this.hideEmpty(),this.updateBulkActionsVisibility(),this.lastNotificationHash=this.hashNotifications(t)}catch(e){console.error("Failed to render notifications:",e),this.showError("Failed to display notifications")}}renderNotificationItem(t){const e=t.read_at===null,i=this.formatTimeAgo(t.created_at),s=this.getPriorityClass(t.priority),o=this.getTypeIcon(t.type);return`
            <div class="notification-item ${e?"unread":"read"}" data-id="${t.id}">
                <div class="notification-select">
                    <input type="checkbox" class="notification-checkbox" value="${t.id}">
                </div>
                
                <div class="notification-icon ${s}">
                    <i class="${o}"></i>
                </div>
                
                <div class="notification-content">
                    <div class="notification-header">
                        <h6 class="notification-title">${this.escapeHtml(t.title)}</h6>
                        <span class="notification-time">${i}</span>
                    </div>
                    
                    <div class="notification-body">
                        <p class="notification-message">${this.escapeHtml(t.message)}</p>
                        
                        ${t.action_url?`
                            <div class="notification-actions">
                                <a href="${this.escapeHtml(t.action_url)}" class="btn btn-sm btn-outline-primary">
                                    View Details
                                </a>
                            </div>
                        `:""}
                    </div>
                    
                    <div class="notification-meta">
                        <span class="notification-type badge badge-${this.getTypeBadgeColor(t.type)}">
                            ${this.formatNotificationType(t.type)}
                        </span>
                        
                        ${t.priority!=="normal"?`
                            <span class="notification-priority badge badge-${this.getPriorityBadgeColor(t.priority)}">
                                ${t.priority.toUpperCase()}
                            </span>
                        `:""}
                    </div>
                </div>
                
                <div class="notification-actions-menu">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-link dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fas fa-ellipsis-v"></i>
                        </button>
                        <div class="dropdown-menu dropdown-menu-end">
                            ${e?`
                                <button class="dropdown-item mark-read-btn" data-id="${t.id}">
                                    <i class="fas fa-eye"></i> Mark as Read
                                </button>
                            `:`
                                <button class="dropdown-item mark-unread-btn" data-id="${t.id}">
                                    <i class="fas fa-eye-slash"></i> Mark as Unread
                                </button>
                            `}
                            <button class="dropdown-item delete-notification-btn" data-id="${t.id}">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `}updateNotificationsIfChanged(t){this.hashNotifications(t)!==this.lastNotificationHash&&this.renderNotifications(t)}hashNotifications(t){return t.map(e=>`${e.id}-${e.read_at}`).join("|")}updatePagination(t){if(this.elements.pagination)try{const{current_page:e,last_page:i,total:s,per_page:o,from:a,to:n}=t;this.elements.paginationInfo&&(this.elements.paginationInfo.innerHTML=`
                    <div class="notifications-pagination-summary">
                        Showing ${a||0} to ${n||0} of ${s} notifications
                    </div>
                `);const l=this.generatePaginationHTML(e,i),c=this.elements.pagination.querySelector(".notifications-pagination-nav");c&&(c.innerHTML=l),this.elements.perPageSelect&&(this.elements.perPageSelect.value=o)}catch(e){console.error("Failed to update pagination:",e)}}generatePaginationHTML(t,e){if(e<=1)return"";let i='<ul class="pagination">';i+=`
            <li class="page-item ${t<=1?"disabled":""}">
                <button class="page-link pagination-btn" data-page="${t-1}" aria-label="Previous">
                    <i class="fas fa-chevron-left"></i>
                </button>
            </li>
        `;const s=Math.max(1,t-2),o=Math.min(e,t+2);s>1&&(i+=`
                <li class="page-item">
                    <button class="page-link pagination-btn" data-page="1">1</button>
                </li>
            `,s>2&&(i+='<li class="page-item disabled"><span class="page-link">...</span></li>'));for(let a=s;a<=o;a++)i+=`
                <li class="page-item ${a===t?"active":""}">
                    <button class="page-link pagination-btn" data-page="${a}">${a}</button>
                </li>
            `;return o<e&&(o<e-1&&(i+='<li class="page-item disabled"><span class="page-link">...</span></li>'),i+=`
                <li class="page-item">
                    <button class="page-link pagination-btn" data-page="${e}">${e}</button>
                </li>
            `),i+=`
            <li class="page-item ${t>=e?"disabled":""}">
                <button class="page-link pagination-btn" data-page="${t+1}" aria-label="Next">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </li>
        `,i+="</ul>",i}updateStats(t){this.elements.totalCount&&(this.elements.totalCount.textContent=t.total||0),this.elements.unreadCount&&(this.elements.unreadCount.textContent=t.unread||0)}updateBulkActionsVisibility(){const t=this.app.selectedNotifications.size;this.elements.selectedCount&&(this.elements.selectedCount.textContent=t),this.elements.bulkActions&&(this.elements.bulkActions.style.display=t>0?"flex":"none"),this.elements.deleteSelectedBtn&&(this.elements.deleteSelectedBtn.disabled=t===0)}setLoadingState(t){this.elements.loading&&(this.elements.loading.style.display=t?"block":"none"),this.elements.container&&this.elements.container.classList.toggle("loading",t),document.querySelectorAll(".notifications-action-btn").forEach(i=>i.disabled=t)}showEmpty(){this.elements.empty&&(this.elements.empty.style.display="block"),this.elements.list&&(this.elements.list.style.display="none")}hideEmpty(){this.elements.empty&&(this.elements.empty.style.display="none"),this.elements.list&&(this.elements.list.style.display="block")}showMessage(t,e="info"){this.clearMessages();const i=this.elements[e];i&&(i.textContent=t,i.style.display="block",e==="success"&&setTimeout(()=>this.clearMessages(),5e3))}clearMessages(){["error","success"].forEach(t=>{const e=this.elements[t];e&&(e.style.display="none",e.textContent="")})}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}formatTimeAgo(t){const e=new Date,i=new Date(t),s=e-i,o=Math.floor(s/6e4),a=Math.floor(s/36e5),n=Math.floor(s/864e5);return o<1?"Just now":o<60?`${o}m ago`:a<24?`${a}h ago`:n<7?`${n}d ago`:i.toLocaleDateString()}getPriorityClass(t){return{low:"priority-low",normal:"priority-normal",high:"priority-high",urgent:"priority-urgent"}[t]||"priority-normal"}getPriorityBadgeColor(t){return{low:"info",normal:"secondary",high:"warning",urgent:"danger"}[t]||"secondary"}getTypeIcon(t){return{system:"fas fa-cog",update:"fas fa-sync",reminder:"fas fa-bell",alert:"fas fa-exclamation-triangle",info:"fas fa-info-circle",success:"fas fa-check-circle",warning:"fas fa-exclamation-circle",error:"fas fa-times-circle"}[t]||"fas fa-bell"}getTypeBadgeColor(t){return{system:"secondary",update:"primary",reminder:"info",alert:"warning",info:"info",success:"success",warning:"warning",error:"danger"}[t]||"secondary"}formatNotificationType(t){return t.charAt(0).toUpperCase()+t.slice(1)}}class h{constructor(t){this.app=t,this.baseUrl=window.location.origin,this.defaultHeaders={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}async getNotifications(t={}){try{const e=this.buildUrl("/app/ajax/get_user_notifications.php",t),i=await fetch(e,{method:"GET",headers:this.defaultHeaders,credentials:"same-origin"});if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const s=await i.json();return this.handleResponse(s)}catch(e){return console.error("Failed to fetch notifications:",e),{success:!1,message:"Failed to fetch notifications. Please check your connection.",error:e.message}}}async markNotificationsRead(t){try{const e=await fetch("/app/ajax/mark_notifications_read.php",{method:"POST",headers:this.defaultHeaders,credentials:"same-origin",body:JSON.stringify({notification_ids:t})});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const i=await e.json();return this.handleResponse(i)}catch(e){return console.error("Failed to mark notifications as read:",e),{success:!1,message:"Failed to mark notifications as read. Please try again.",error:e.message}}}async markAllNotificationsRead(){try{const t=await fetch("/app/ajax/mark_all_notifications_read.php",{method:"POST",headers:this.defaultHeaders,credentials:"same-origin",body:JSON.stringify({})});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const e=await t.json();return this.handleResponse(e)}catch(t){return console.error("Failed to mark all notifications as read:",t),{success:!1,message:"Failed to mark all notifications as read. Please try again.",error:t.message}}}async deleteNotifications(t){try{const e=await fetch("/app/ajax/delete_notifications.php",{method:"POST",headers:this.defaultHeaders,credentials:"same-origin",body:JSON.stringify({notification_ids:t})});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const i=await e.json();return this.handleResponse(i)}catch(e){return console.error("Failed to delete notifications:",e),{success:!1,message:"Failed to delete notifications. Please try again.",error:e.message}}}async getNotificationStats(){try{const t=await fetch("/app/ajax/get_notification_stats.php",{method:"GET",headers:this.defaultHeaders,credentials:"same-origin"});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const e=await t.json();return this.handleResponse(e)}catch(t){return console.error("Failed to fetch notification stats:",t),{success:!1,message:"Failed to fetch notification statistics.",error:t.message}}}async createNotification(t){try{const e=await fetch("/app/ajax/create_notification.php",{method:"POST",headers:this.defaultHeaders,credentials:"same-origin",body:JSON.stringify(t)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const i=await e.json();return this.handleResponse(i)}catch(e){return console.error("Failed to create notification:",e),{success:!1,message:"Failed to create notification. Please try again.",error:e.message}}}async updateNotificationPreferences(t){try{const e=await fetch("/app/ajax/update_notification_preferences.php",{method:"POST",headers:this.defaultHeaders,credentials:"same-origin",body:JSON.stringify({preferences:t})});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const i=await e.json();return this.handleResponse(i)}catch(e){return console.error("Failed to update notification preferences:",e),{success:!1,message:"Failed to update notification preferences. Please try again.",error:e.message}}}async exportNotifications(t={}){try{const e=this.buildUrl("/app/ajax/export_notifications.php",t),i=await fetch(e,{method:"GET",headers:{"X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const s=await i.blob(),o=window.URL.createObjectURL(s),a=document.createElement("a");return a.href=o,a.download=`notifications_export_${new Date().toISOString().split("T")[0]}.csv`,document.body.appendChild(a),a.click(),document.body.removeChild(a),window.URL.revokeObjectURL(o),{success:!0,message:"Notifications exported successfully"}}catch(e){return console.error("Failed to export notifications:",e),{success:!1,message:"Failed to export notifications. Please try again.",error:e.message}}}async sendTestNotification(t){try{const e=await fetch("/app/ajax/send_test_notification.php",{method:"POST",headers:this.defaultHeaders,credentials:"same-origin",body:JSON.stringify(t)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const i=await e.json();return this.handleResponse(i)}catch(e){return console.error("Failed to send test notification:",e),{success:!1,message:"Failed to send test notification. Please try again.",error:e.message}}}buildUrl(t,e={}){const i=new URL(t,this.baseUrl);return Object.keys(e).forEach(s=>{e[s]!==void 0&&e[s]!==null&&e[s]!==""&&i.searchParams.append(s,e[s])}),i.toString()}handleResponse(t){return typeof t!="object"||t===null?{success:!1,message:"Invalid response format",data:null}:t.hasOwnProperty("success")?t:t.hasOwnProperty("data")||t.hasOwnProperty("notifications")?{success:!0,data:t.data||t.notifications||t,pagination:t.pagination||null,stats:t.stats||null,message:t.message||null}:t.hasOwnProperty("error")?{success:!1,message:t.error||"An error occurred",data:null}:{success:!0,data:t,message:null}}async fetchWithTimeout(t,e={},i=3e4){const s=new AbortController,o=setTimeout(()=>s.abort(),i);try{const a=await fetch(t,{...e,signal:s.signal});return clearTimeout(o),a}catch(a){throw clearTimeout(o),a.name==="AbortError"?new Error("Request timed out. Please check your connection."):a}}async retryRequest(t,e=3,i=1e3){let s;for(let o=1;o<=e;o++)try{return await t()}catch(a){if(s=a,o===e)break;const n=i*Math.pow(2,o-1);await this.delay(n),console.warn(`Request failed (attempt ${o}/${e}), retrying in ${n}ms...`,a)}throw s}delay(t){return new Promise(e=>setTimeout(e,t))}}class f{constructor(t){this.app=t,this.searchTimeout=null,this.searchDelay=500}init(){this.setupEventListeners(),this.setupKeyboardShortcuts(),this.setupMobileOptimizations()}setupEventListeners(){this.setupFilterButtons(),this.setupSearch(),this.setupBulkSelection(),this.setupActionButtons(),this.setupPagination(),this.setupPerPageSelection(),this.setupNotificationActions(),this.setupRefresh(),this.setupModals()}setupFilterButtons(){document.addEventListener("click",t=>{if(t.target.matches(".notifications-filter-btn")){t.preventDefault();const e=t.target.dataset.filter;e&&(document.querySelectorAll(".notifications-filter-btn").forEach(i=>{i.classList.remove("active")}),t.target.classList.add("active"),this.app.applyFilter(e))}})}setupSearch(){document.addEventListener("input",t=>{if(t.target.matches(".notifications-search-input")){clearTimeout(this.searchTimeout);const e=t.target.value.trim();this.searchTimeout=setTimeout(()=>{this.app.applySearch(e)},this.searchDelay)}}),document.addEventListener("click",t=>{if(t.target.matches(".notifications-search-btn")){t.preventDefault();const e=document.querySelector(".notifications-search-input");if(e){const i=e.value.trim();this.app.applySearch(i)}}}),document.addEventListener("click",t=>{if(t.target.matches(".clear-search-btn")){t.preventDefault();const e=document.querySelector(".notifications-search-input");e&&(e.value="",this.app.applySearch(""))}}),document.addEventListener("keydown",t=>{if(t.target.matches(".notifications-search-input")&&t.key==="Enter"){t.preventDefault();const e=t.target.value.trim();this.app.applySearch(e)}})}setupBulkSelection(){document.addEventListener("change",t=>{if(t.target.matches(".select-all-notifications")){const e=t.target.checked;document.querySelectorAll(".notification-checkbox").forEach(s=>{s.checked=e,e?this.app.selectedNotifications.add(s.value):this.app.selectedNotifications.delete(s.value)}),this.updateBulkSelectionUI()}}),document.addEventListener("change",t=>{if(t.target.matches(".notification-checkbox")){const e=t.target.value;t.target.checked?this.app.selectedNotifications.add(e):this.app.selectedNotifications.delete(e),this.updateBulkSelectionUI()}})}updateBulkSelectionUI(){const t=document.querySelectorAll(".notification-checkbox").length,e=this.app.selectedNotifications.size,i=document.querySelector(".select-all-notifications");i&&(i.checked=e>0&&e===t,i.indeterminate=e>0&&e<t),this.app.logic.updateBulkActionsVisibility()}setupActionButtons(){document.addEventListener("click",t=>{t.target.matches(".mark-all-read-btn")&&(t.preventDefault(),this.handleMarkAllAsRead())}),document.addEventListener("click",t=>{t.target.matches(".delete-selected-btn")&&(t.preventDefault(),this.handleDeleteSelected())}),document.addEventListener("click",t=>{t.target.matches(".mark-selected-read-btn")&&(t.preventDefault(),this.handleMarkSelectedAsRead())}),document.addEventListener("click",t=>{t.target.matches(".refresh-notifications-btn")&&(t.preventDefault(),this.app.loadNotifications())})}setupPagination(){document.addEventListener("click",t=>{if(t.target.matches(".pagination-btn")){t.preventDefault();const e=parseInt(t.target.dataset.page);e&&e>0&&this.app.changePage(e)}})}setupPerPageSelection(){document.addEventListener("change",t=>{if(t.target.matches(".notifications-per-page select")){const e=parseInt(t.target.value);e&&e>0&&this.app.changePerPage(e)}})}setupNotificationActions(){document.addEventListener("click",t=>{if(t.target.matches(".mark-read-btn")){t.preventDefault();const e=t.target.dataset.id;e&&this.app.markAsRead([e])}if(t.target.matches(".mark-unread-btn")){t.preventDefault();const e=t.target.dataset.id;e&&this.handleMarkAsUnread([e])}}),document.addEventListener("click",t=>{if(t.target.matches(".delete-notification-btn")){t.preventDefault();const e=t.target.dataset.id;e&&this.handleDeleteNotification([e])}}),document.addEventListener("click",t=>{if(t.target.closest(".notification-item.unread")&&!t.target.closest(".notification-select, .notification-actions-menu, .dropdown")){const e=t.target.closest(".notification-item"),i=e.dataset.id,s=e.querySelector(".notification-actions a")?.href;i&&(this.app.markAsRead([i]),s&&!t.ctrlKey&&!t.metaKey&&setTimeout(()=>{window.location.href=s},500))}})}setupRefresh(){window.addEventListener("focus",()=>{this.app.refreshNotifications()});let t=0,e=0;const i=100;document.addEventListener("touchstart",s=>{window.scrollY===0&&(t=s.touches[0].clientY)}),document.addEventListener("touchmove",s=>{window.scrollY===0&&t&&(e=s.touches[0].clientY-t,e>0&&e<i&&s.preventDefault())}),document.addEventListener("touchend",()=>{e>i&&this.app.loadNotifications(),t=0,e=0})}setupKeyboardShortcuts(){document.addEventListener("keydown",t=>{if(!t.target.matches("input, textarea, select"))switch(t.key){case"r":(t.ctrlKey||t.metaKey)&&(t.preventDefault(),this.app.loadNotifications());break;case"a":(t.ctrlKey||t.metaKey)&&(t.preventDefault(),this.selectAllNotifications());break;case"Escape":this.clearSelection();break;case"Delete":case"Backspace":this.app.selectedNotifications.size>0&&(t.preventDefault(),this.handleDeleteSelected());break}})}setupMobileOptimizations(){if("ontouchstart"in window){document.body.classList.add("touch-device");let t;document.addEventListener("touchstart",e=>{e.target.closest(".notification-item")&&(t=setTimeout(()=>{const s=e.target.closest(".notification-item").querySelector(".notification-checkbox");s&&(s.checked=!s.checked,s.dispatchEvent(new Event("change")))},500))}),document.addEventListener("touchend",()=>{clearTimeout(t)}),document.addEventListener("touchmove",()=>{clearTimeout(t)})}}setupModals(){document.addEventListener("show.bs.modal",t=>{if(t.target.matches(".delete-confirmation-modal")){const e=this.app.selectedNotifications.size,i=t.target.querySelector(".delete-count");i&&(i.textContent=e)}}),document.addEventListener("click",t=>{if(t.target.matches(".confirm-delete-btn")){t.preventDefault();const e=t.target.closest(".modal");if(e){const s=window.bootstrap;s&&s.Modal.getInstance(e).hide()}const i=Array.from(this.app.selectedNotifications);i.length>0&&this.app.deleteNotifications(i)}})}async handleMarkAllAsRead(){confirm("Mark all notifications as read?")&&await this.app.markAllAsRead()}async handleDeleteSelected(){const t=Array.from(this.app.selectedNotifications);t.length!==0&&confirm(`Delete ${t.length} selected notification(s)?`)&&await this.app.deleteNotifications(t)}async handleMarkSelectedAsRead(){const t=Array.from(this.app.selectedNotifications);t.length!==0&&await this.app.markAsRead(t)}async handleMarkAsUnread(t){this.app.showError("Mark as unread functionality coming soon.")}async handleDeleteNotification(t){confirm("Delete this notification?")&&await this.app.deleteNotifications(t)}selectAllNotifications(){const t=document.querySelector(".select-all-notifications");t&&(t.checked=!0,t.dispatchEvent(new Event("change")))}clearSelection(){this.app.selectedNotifications.clear(),document.querySelectorAll(".notification-checkbox, .select-all-notifications").forEach(e=>{e.checked=!1}),this.updateBulkSelectionUI()}showNotificationPreview(t){}openNotificationSettings(){}}class u{constructor(){this.currentPage=1,this.perPage=10,this.currentFilter="all",this.searchQuery="",this.selectedNotifications=new Set,this.isLoading=!1,this.logic=new d(this),this.ajax=new h(this),this.interactions=new f(this),this.init()}init(){try{document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>this.setup()):this.setup()}catch(t){console.error("Failed to initialize Notifications App:",t),this.showError("Failed to initialize notifications. Please refresh the page.")}}setup(){try{this.interactions.init(),this.loadNotifications(),this.setupAutoRefresh()}catch(t){console.error("Failed to setup Notifications App:",t),this.showError("Failed to setup notifications interface.")}}async loadNotifications(){if(!this.isLoading)try{this.setLoading(!0);const t={page:this.currentPage,per_page:this.perPage,filter:this.currentFilter,search:this.searchQuery},e=await this.ajax.getNotifications(t);if(e.success)this.logic.renderNotifications(e.data),this.logic.updatePagination(e.pagination),this.logic.updateStats(e.stats),this.clearError();else throw new Error(e.message||"Failed to load notifications")}catch(t){console.error("Failed to load notifications:",t),this.showError("Failed to load notifications. Please try again.")}finally{this.setLoading(!1)}}setupAutoRefresh(){setInterval(()=>{!this.isLoading&&document.visibilityState==="visible"&&this.refreshNotifications()},3e4),document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&this.refreshNotifications()})}async refreshNotifications(){try{const t={page:this.currentPage,per_page:this.perPage,filter:this.currentFilter,search:this.searchQuery},e=await this.ajax.getNotifications(t);e.success&&(this.logic.updateNotificationsIfChanged(e.data),this.logic.updateStats(e.stats))}catch(t){console.warn("Failed to refresh notifications:",t)}}changePage(t){t!==this.currentPage&&t>0&&(this.currentPage=t,this.loadNotifications())}changePerPage(t){t!==this.perPage&&(this.perPage=t,this.currentPage=1,this.loadNotifications())}applyFilter(t){t!==this.currentFilter&&(this.currentFilter=t,this.currentPage=1,this.selectedNotifications.clear(),this.loadNotifications())}applySearch(t){t!==this.searchQuery&&(this.searchQuery=t,this.currentPage=1,this.loadNotifications())}async markAsRead(t){try{this.setLoading(!0);const e=await this.ajax.markNotificationsRead(t);if(e.success)this.loadNotifications(),this.showSuccess(`${t.length} notification(s) marked as read`);else throw new Error(e.message||"Failed to mark notifications as read")}catch(e){console.error("Failed to mark notifications as read:",e),this.showError("Failed to mark notifications as read. Please try again.")}finally{this.setLoading(!1)}}async deleteNotifications(t){try{this.setLoading(!0);const e=await this.ajax.deleteNotifications(t);if(e.success)this.selectedNotifications.clear(),this.loadNotifications(),this.showSuccess(`${t.length} notification(s) deleted`);else throw new Error(e.message||"Failed to delete notifications")}catch(e){console.error("Failed to delete notifications:",e),this.showError("Failed to delete notifications. Please try again.")}finally{this.setLoading(!1)}}async markAllAsRead(){try{this.setLoading(!0);const t=await this.ajax.markAllNotificationsRead();if(t.success)this.selectedNotifications.clear(),this.loadNotifications(),this.showSuccess("All notifications marked as read");else throw new Error(t.message||"Failed to mark all notifications as read")}catch(t){console.error("Failed to mark all notifications as read:",t),this.showError("Failed to mark all notifications as read. Please try again.")}finally{this.setLoading(!1)}}setLoading(t){this.isLoading=t,this.logic.setLoadingState(t)}showError(t){this.logic.showMessage(t,"error")}showSuccess(t){this.logic.showMessage(t,"success")}clearError(){this.logic.clearMessages()}getState(){return{currentPage:this.currentPage,perPage:this.perPage,currentFilter:this.currentFilter,searchQuery:this.searchQuery,selectedNotifications:Array.from(this.selectedNotifications),isLoading:this.isLoading}}}document.addEventListener("DOMContentLoaded",()=>{document.querySelector(".notifications-container")&&(window.notificationsApp=new u)});

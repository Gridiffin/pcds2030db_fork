function d(){typeof bootstrap<"u"&&bootstrap.Tooltip&&[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map(function(t){return new bootstrap.Tooltip(t)})}function h(n,t="info",e=5e3){document.querySelectorAll(".alert-toast").forEach(a=>a.remove());const r=document.createElement("div");return r.className=`alert alert-${t} alert-dismissible fade show alert-toast`,r.style.cssText=`
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
        min-width: 300px;
        max-width: 500px;
    `,r.innerHTML=`
        <div class="d-flex align-items-center">
            <i class="fas ${m(t)} me-2"></i>
            <span>${n}</span>
            <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert"></button>
        </div>
    `,document.body.appendChild(r),e>0&&setTimeout(()=>{r.parentNode&&r.remove()},e),r}function m(n){return{success:"fa-check-circle",error:"fa-exclamation-circle",danger:"fa-exclamation-triangle",warning:"fa-exclamation-triangle",info:"fa-info-circle",primary:"fa-info-circle",secondary:"fa-info-circle"}[n]||"fa-info-circle"}class g{constructor(t){this.moduleName=t,this.initialized=!1,this.eventListeners=[],this.intervals=[],this.timeouts=[]}init(){if(this.initialized){console.warn(`${this.moduleName}: Module already initialized`);return}console.log(`${this.moduleName}: Initializing module`),this.initialized=!0,this.setupErrorHandling()}setupErrorHandling(){const t=console.error;window.addEventListener("error",e=>{t(`${this.moduleName}: JavaScript error:`,e.error)})}addEventListener(t,e,o,r){if(!t){console.warn(`${this.moduleName}: Cannot add event listener - element is null`);return}t.addEventListener(e,o,r),this.eventListeners.push({element:t,event:e,handler:o,options:r})}removeEventListener(t,e,o){t&&(t.removeEventListener(e,o),this.eventListeners=this.eventListeners.filter(r=>!(r.element===t&&r.event===e&&r.handler===o)))}setInterval(t,e){const o=setInterval(t,e);return this.intervals.push(o),o}clearInterval(t){clearInterval(t),this.intervals=this.intervals.filter(e=>e!==t)}setTimeout(t,e){const o=setTimeout(t,e);return this.timeouts.push(o),o}clearTimeout(t){clearTimeout(t),this.timeouts=this.timeouts.filter(e=>e!==t)}showLoading(t,e="Loading..."){t&&(t.innerHTML=`
            <div class="d-flex justify-content-center align-items-center p-3">
                <div class="spinner-border spinner-border-sm me-2" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <span>${e}</span>
            </div>
        `)}showError(t,e="An error occurred"){t&&(t.innerHTML=`
            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <span>${e}</span>
            </div>
        `)}showEmpty(t,e="No data available",o="fas fa-inbox"){t&&(t.innerHTML=`
            <div class="text-center text-muted p-4">
                <i class="${o} fa-2x mb-3 d-block"></i>
                <p class="mb-0">${e}</p>
            </div>
        `)}getElementById(t){const e=document.getElementById(t);return e||console.warn(`${this.moduleName}: Element with ID '${t}' not found`),e}querySelector(t){const e=document.querySelector(t);return e||console.warn(`${this.moduleName}: Element with selector '${t}' not found`),e}querySelectorAll(t){const e=document.querySelectorAll(t);return e.length===0&&console.warn(`${this.moduleName}: No elements found with selector '${t}'`),e}log(t,...e){console.log(`${this.moduleName}:`,t,...e)}warn(t,...e){console.warn(`${this.moduleName}:`,t,...e)}error(t,...e){console.error(`${this.moduleName}:`,t,...e)}isInitialized(){return this.initialized}getModuleName(){return this.moduleName}destroy(){if(!this.initialized){this.warn("Attempting to destroy uninitialized module");return}this.log("Destroying module"),this.eventListeners.forEach(({element:t,event:e,handler:o})=>{t&&t.removeEventListener&&t.removeEventListener(e,o)}),this.eventListeners=[],this.intervals.forEach(t=>{clearInterval(t)}),this.intervals=[],this.timeouts.forEach(t=>{clearTimeout(t)}),this.timeouts=[],this.initialized=!1,this.log("Module destroyed")}}class p{constructor(t){this.chartManager=t,this.chart=null,this.tableData=null,this.columns=null,this.rows=null}init(){console.log("ViewOutcome: Initializing view outcome module"),this.loadData(),this.hasData()?this.initializeChart():this.showEmptyState(),this.setupEventListeners()}loadData(){typeof window.tableData<"u"&&(this.tableData=window.tableData,this.columns=window.tableColumns||[],this.rows=window.tableRows||[],console.log("ViewOutcome: Data loaded",{tableData:this.tableData,columns:this.columns,rows:this.rows}))}hasData(){return this.tableData&&this.columns&&this.columns.length>0&&this.rows&&this.rows.length>0}initializeChart(){console.log("ViewOutcome: Initializing chart");const t=document.querySelector(".outcome-chart-container"),e=document.getElementById("metricChart");if(!e){console.warn("ViewOutcome: Chart canvas not found");return}t&&(t.style.display="block");try{this.chart=this.chartManager.createChart(e,{data:this.tableData,columns:this.columns,rows:this.rows,type:"line"}),console.log("ViewOutcome: Chart created successfully")}catch(o){console.error("ViewOutcome: Error creating chart:",o),this.showChartError()}}showEmptyState(){console.log("ViewOutcome: Showing empty state");const t=document.querySelector(".outcome-chart-container");t&&(t.innerHTML=`
                <div class="outcome-empty-state">
                    <i class="fas fa-chart-line"></i>
                    <h4>No Data Available</h4>
                    <p>This outcome doesn't have any data to display yet. Please contact your administrator to add data.</p>
                </div>
            `)}showChartError(){const t=document.querySelector(".outcome-chart-container");t&&(t.innerHTML=`
                <div class="chart-error">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div class="chart-error-text">
                        Unable to display chart. Please check the data format or refresh the page.
                    </div>
                </div>
            `)}setupEventListeners(){const t=document.getElementById("exportChart");t&&t.addEventListener("click",r=>{r.preventDefault(),this.exportChart()});const e=document.getElementById("exportData");e&&e.addEventListener("click",r=>{r.preventDefault(),this.exportData()}),document.querySelectorAll(".chart-type-btn").forEach(r=>{r.addEventListener("click",a=>{a.preventDefault(),this.changeChartType(r.dataset.type)})}),document.querySelector('a[href*="submit_outcomes.php"]')}changeChartType(t){if(!(!this.chart||!this.hasData())){console.log("ViewOutcome: Changing chart type to",t);try{this.chartManager.updateChartType(this.chart,t,{data:this.tableData,columns:this.columns,rows:this.rows}),document.querySelectorAll(".chart-type-btn").forEach(o=>{o.classList.remove("active")});const e=document.querySelector(`[data-type="${t}"]`);e&&e.classList.add("active")}catch(e){console.error("ViewOutcome: Error changing chart type:",e)}}}exportChart(){if(!this.chart){console.warn("ViewOutcome: No chart available for export");return}try{const t=document.createElement("a");t.download=`outcome-${this.getOutcomeId()}-chart.png`,t.href=this.chart.toBase64Image(),document.body.appendChild(t),t.click(),document.body.removeChild(t),console.log("ViewOutcome: Chart exported successfully")}catch(t){console.error("ViewOutcome: Error exporting chart:",t)}}exportData(){if(!this.hasData()){console.warn("ViewOutcome: No data available for export");return}try{let t="";const e=["Month/Period",...this.columns];t+=e.join(",")+"\\n",this.rows.forEach(s=>{const i=[s.month||s.label||""];this.columns.forEach(c=>{i.push(s.data[c]||"")}),t+=i.join(",")+"\\n"});const o=new Blob([t],{type:"text/csv"}),r=window.URL.createObjectURL(o),a=document.createElement("a");a.href=r,a.download=`outcome-${this.getOutcomeId()}-data.csv`,document.body.appendChild(a),a.click(),document.body.removeChild(a),window.URL.revokeObjectURL(r),console.log("ViewOutcome: Data exported successfully")}catch(t){console.error("ViewOutcome: Error exporting data:",t)}}getOutcomeId(){return new URLSearchParams(window.location.search).get("id")||"unknown"}destroy(){this.chart&&(this.chart.destroy(),this.chart=null),console.log("ViewOutcome: Module destroyed")}}class f{constructor(t){this.chartManager=t,this.chart=null,this.structureManager=null,this.currentRowConfig=[],this.currentColumnConfig=[],this.unsavedChanges=!1,this.autoSaveTimer=null}init(){console.log("EditOutcome: Initializing edit outcome module"),this.loadConfiguration(),this.initStructureManager(),this.initEditableTable(),this.hasData()&&this.initializeChart(),this.setupEventListeners(),this.setupAutoSave(),this.setupUnsavedChangesTracking()}loadConfiguration(){const t=document.getElementById("row_config"),e=document.getElementById("column_config");if(t&&e)try{const o=JSON.parse(t.value||"{}"),r=JSON.parse(e.value||"{}");this.currentRowConfig=Array.isArray(o)?o:o.rows||[],this.currentColumnConfig=Array.isArray(r)?r:r.columns||[],console.log("EditOutcome: Configuration loaded",{rows:this.currentRowConfig,columns:this.currentColumnConfig})}catch(o){console.error("EditOutcome: Error parsing configuration:",o),this.currentRowConfig=[],this.currentColumnConfig=[]}}initStructureManager(){this.structureManager={rows:this.currentRowConfig,columns:this.currentColumnConfig,addRow:(t="")=>{const e={id:"row_"+Date.now(),label:t||`Row ${this.structureManager.rows.length+1}`,data:{}};return this.structureManager.rows.push(e),this.updateTableStructure(),this.markUnsavedChanges(),e},removeRow:t=>{t>=0&&t<this.structureManager.rows.length&&(this.structureManager.rows.splice(t,1),this.updateTableStructure(),this.markUnsavedChanges())},addColumn:(t="")=>{const e={id:"col_"+Date.now(),label:t||`Column ${this.structureManager.columns.length+1}`,type:"numeric"};return this.structureManager.columns.push(e),this.updateTableStructure(),this.markUnsavedChanges(),e},removeColumn:t=>{if(t>=0&&t<this.structureManager.columns.length){const e=this.structureManager.columns[t].id;this.structureManager.columns.splice(t,1),this.structureManager.rows.forEach(o=>{delete o.data[e]}),this.updateTableStructure(),this.markUnsavedChanges()}},getStructureData:()=>({rows:this.structureManager.rows,columns:this.structureManager.columns})}}initEditableTable(){this.updateTableStructure()}updateTableStructure(){const t=document.getElementById("dynamic-table-container");if(!t){console.warn("EditOutcome: Table container not found");return}let e='<div class="editable-table">';e+='<table class="table table-bordered">',e+="<thead><tr>",e+='<th class="row-control">Row</th>',this.structureManager.columns.forEach((r,a)=>{e+=`
                <th>
                    <div class="metric-header">
                        <input type="text" 
                               class="metric-title" 
                               value="${this.escapeHtml(r.label)}"
                               data-column-index="${a}"
                               placeholder="Column title">
                        <div class="metric-actions">
                            <button type="button" 
                                    class="metric-action-btn btn-danger"
                                    onclick="outcomesModule.editModule.removeColumn(${a})"
                                    title="Remove column">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </th>
            `}),e+='<th><button type="button" class="btn-control btn-primary" onclick="outcomesModule.editModule.addColumn()"><i class="fas fa-plus"></i></button></th>',e+="</tr></thead>",e+="<tbody>",this.structureManager.rows.forEach((r,a)=>{e+="<tr>",e+=`
                <td class="row-control">
                    <input type="text" 
                           class="cell-input"
                           value="${this.escapeHtml(r.label)}"
                           data-row-index="${a}"
                           placeholder="Row label">
                    <div class="row-actions">
                        <button type="button" 
                                class="row-action-btn btn-danger"
                                onclick="outcomesModule.editModule.removeRow(${a})"
                                title="Remove row">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </td>
            `,this.structureManager.columns.forEach((s,i)=>{const c=r.data[s.id]||"";e+=`
                    <td class="editable-cell">
                        <input type="text" 
                               class="cell-input"
                               value="${this.escapeHtml(c)}"
                               data-row-index="${a}"
                               data-column-index="${i}"
                               placeholder="Enter value">
                    </td>
                `}),e+="<td></td>",e+="</tr>"}),e+="</tbody></table>",e+="</div>";const o=`
            <div class="table-controls">
                <div class="table-controls-left">
                    <button type="button" class="btn-control btn-primary" onclick="outcomesModule.editModule.addRow()">
                        <i class="fas fa-plus"></i> Add Row
                    </button>
                </div>
                <div class="table-controls-right">
                    <button type="button" class="btn-control" onclick="outcomesModule.editModule.previewChart()">
                        <i class="fas fa-chart-line"></i> Preview Chart
                    </button>
                </div>
            </div>
        `;t.innerHTML=o+e,this.setupTableEventListeners(),console.log("EditOutcome: Table structure updated")}setupTableEventListeners(){document.querySelectorAll(".metric-title").forEach(t=>{t.addEventListener("blur",e=>{const o=parseInt(e.target.dataset.columnIndex);this.structureManager.columns[o]&&(this.structureManager.columns[o].label=e.target.value,this.markUnsavedChanges())})}),document.querySelectorAll("input[data-row-index]:not([data-column-index])").forEach(t=>{t.addEventListener("blur",e=>{const o=parseInt(e.target.dataset.rowIndex);this.structureManager.rows[o]&&(this.structureManager.rows[o].label=e.target.value,this.markUnsavedChanges())})}),document.querySelectorAll("input[data-row-index][data-column-index]").forEach(t=>{t.addEventListener("blur",e=>{const o=parseInt(e.target.dataset.rowIndex),r=parseInt(e.target.dataset.columnIndex);if(this.structureManager.rows[o]&&this.structureManager.columns[r]){const a=this.structureManager.columns[r].id;this.structureManager.rows[o].data[a]=e.target.value,this.markUnsavedChanges()}})})}hasData(){return this.structureManager&&this.structureManager.columns.length>0&&this.structureManager.rows.length>0}initializeChart(){document.getElementById("metricChart")&&this.updateChartData()}updateChartData(){if(this.hasData())try{const t=this.prepareChartData();if(this.chart)this.chartManager.updateChart(this.chart,t);else{const e=document.getElementById("metricChart");e&&(this.chart=this.chartManager.createChart(e,{...t,type:"line"}))}}catch(t){console.error("EditOutcome: Error updating chart:",t)}}prepareChartData(){const t={},e=this.structureManager.columns.map(r=>r.label),o=this.structureManager.rows.map(r=>({label:r.label,data:{}}));return this.structureManager.rows.forEach((r,a)=>{o[a].data={},this.structureManager.columns.forEach(s=>{o[a].data[s.label]=r.data[s.id]||""})}),{data:t,columns:e,rows:o}}setupEventListeners(){const t=document.querySelector("form");t&&t.addEventListener("submit",r=>{this.prepareFormSubmission()});const e=document.getElementById("save-outcome");e&&e.addEventListener("click",()=>{this.saveOutcome()});const o=document.getElementById("preview-chart");o&&o.addEventListener("click",()=>{this.previewChart()}),window.addEventListener("beforeunload",r=>{if(this.unsavedChanges)return r.preventDefault(),r.returnValue="",""})}addRow(t=""){this.structureManager.addRow(t)}removeRow(t){confirm("Are you sure you want to remove this row?")&&this.structureManager.removeRow(t)}addColumn(t=""){this.structureManager.addColumn(t)}removeColumn(t){confirm("Are you sure you want to remove this column? All data in this column will be lost.")&&this.structureManager.removeColumn(t)}previewChart(){this.updateChartData();const t=document.querySelector(".outcome-chart-container");t&&(t.style.display="block",t.scrollIntoView({behavior:"smooth"}))}prepareFormSubmission(){const t=this.structureManager.getStructureData(),e=document.getElementById("row_config"),o=document.getElementById("column_config");e&&(e.value=JSON.stringify(t.rows)),o&&(o.value=JSON.stringify(t.columns)),console.log("EditOutcome: Form data prepared for submission")}async saveOutcome(){try{const t=new FormData,e=this.structureManager.getStructureData();t.append("data",JSON.stringify({columns:e.columns,rows:e.rows}));const o=this.getOutcomeId();if((await fetch(`save_outcome.php?id=${o}`,{method:"POST",body:t})).ok)this.clearUnsavedChanges(),this.showSaveSuccess();else throw new Error("Save failed")}catch(t){console.error("EditOutcome: Error saving outcome:",t),this.showSaveError()}}setupAutoSave(){this.autoSaveTimer=setInterval(()=>{this.unsavedChanges&&this.saveOutcome()},3e4)}setupUnsavedChangesTracking(){document.addEventListener("input",t=>{t.target.matches(".cell-input, .metric-title")&&this.markUnsavedChanges()})}markUnsavedChanges(){this.unsavedChanges=!0;const t=document.getElementById("save-outcome");t&&(t.innerHTML='<i class="fas fa-save"></i> Save Changes*',t.classList.add("btn-warning"))}clearUnsavedChanges(){this.unsavedChanges=!1;const t=document.getElementById("save-outcome");t&&(t.innerHTML='<i class="fas fa-check"></i> Saved',t.classList.remove("btn-warning"),t.classList.add("btn-success"),setTimeout(()=>{t.innerHTML='<i class="fas fa-save"></i> Save Changes',t.classList.remove("btn-success")},2e3))}showSaveSuccess(){console.log("EditOutcome: Save successful")}showSaveError(){console.error("EditOutcome: Save failed")}getOutcomeId(){return new URLSearchParams(window.location.search).get("id")||""}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}destroy(){this.autoSaveTimer&&clearInterval(this.autoSaveTimer),this.chart&&(this.chart.destroy(),this.chart=null),console.log("EditOutcome: Module destroyed")}}class v{constructor(){this.currentPeriod=null,this.outcomes=[],this.filteredOutcomes=[],this.loading=!1}init(){console.log("SubmitOutcomes: Initializing submit outcomes module"),this.loadCurrentPeriod(),this.loadOutcomes(),this.setupEventListeners(),this.initializeFilters()}loadCurrentPeriod(){const t=document.getElementById("period-select");t&&(this.currentPeriod=t.value)}loadOutcomes(){typeof window.outcomesData<"u"?(this.outcomes=window.outcomesData,this.filteredOutcomes=[...this.outcomes],this.renderOutcomes()):this.fetchOutcomes()}async fetchOutcomes(){this.setLoading(!0);try{const t=await fetch(`ajax/get_outcomes.php?period=${this.currentPeriod}`);if(t.ok){const e=await t.json();this.outcomes=e.outcomes||[],this.filteredOutcomes=[...this.outcomes],this.renderOutcomes()}else throw new Error("Failed to fetch outcomes")}catch(t){console.error("SubmitOutcomes: Error fetching outcomes:",t),this.showError("Failed to load outcomes. Please refresh the page.")}finally{this.setLoading(!1)}}setupEventListeners(){const t=document.getElementById("period-select");t&&t.addEventListener("change",r=>{this.currentPeriod=r.target.value,this.loadOutcomes()});const e=document.getElementById("outcomes-search");e&&e.addEventListener("input",r=>{this.filterOutcomes(r.target.value)});const o=document.getElementById("type-filter");o&&o.addEventListener("change",r=>{this.filterByType(r.target.value)}),document.addEventListener("click",r=>{r.target.matches(".quick-action-btn")&&(r.preventDefault(),this.handleQuickAction(r.target.dataset.action))}),document.addEventListener("click",r=>{r.target.matches(".outcome-action-btn")&&this.handleOutcomeAction(r)})}initializeFilters(){const t=document.getElementById("type-filter");t&&this.outcomes.length>0&&[...new Set(this.outcomes.map(o=>o.type))].forEach(o=>{const r=document.createElement("option");r.value=o,r.textContent=this.formatType(o),t.appendChild(r)})}filterOutcomes(t){const e=t.toLowerCase();this.filteredOutcomes=this.outcomes.filter(o=>o.title.toLowerCase().includes(e)||o.code.toLowerCase().includes(e)||o.description.toLowerCase().includes(e)),this.renderOutcomes()}filterByType(t){t==="all"||!t?this.filteredOutcomes=[...this.outcomes]:this.filteredOutcomes=this.outcomes.filter(e=>e.type===t),this.renderOutcomes()}renderOutcomes(){const t=document.getElementById("outcomes-grid");if(!t){console.warn("SubmitOutcomes: Outcomes grid container not found");return}if(this.filteredOutcomes.length===0){this.renderEmptyState(t);return}let e="";this.filteredOutcomes.forEach(o=>{e+=this.renderOutcomeCard(o)}),t.innerHTML=e,console.log("SubmitOutcomes: Rendered",this.filteredOutcomes.length,"outcomes")}renderOutcomeCard(t){const o=new Date(t.updated_at).toLocaleDateString();return`
            <div class="outcome-card" data-outcome-id="${t.id}">
                <div class="outcome-card-header">
                    <div class="outcome-code">${this.escapeHtml(t.code)}</div>
                    <h3 class="outcome-title">${this.escapeHtml(t.title)}</h3>
                </div>
                <div class="outcome-card-body">
                    <p class="outcome-description">${this.escapeHtml(t.description||"No description available.")}</p>
                    <div class="outcome-meta">
                        <span class="outcome-type type-${t.type}">${this.formatType(t.type)}</span>
                        <span class="outcome-updated">Updated ${o}</span>
                    </div>
                    <div class="outcome-actions">
                        <a href="view_outcome.php?id=${t.id}" 
                           class="outcome-action-btn btn-primary">
                            <i class="fas fa-eye"></i> View Details
                        </a>
                    </div>
                </div>
            </div>
        `}renderEmptyState(t){t.innerHTML=`
            <div class="outcomes-empty">
                <i class="fas fa-chart-bar"></i>
                <h3>No Outcomes Available</h3>
                <p>No outcomes found for the selected period. Outcomes are created by administrators and assigned to reporting periods.</p>
                <div class="outcomes-empty-actions">
                    <button type="button" class="btn btn-primary" onclick="location.reload()">
                        <i class="fas fa-refresh"></i> Refresh
                    </button>
                </div>
            </div>
        `}handleQuickAction(t){switch(t){case"refresh":this.loadOutcomes();break;case"export":this.exportOutcomes();break;default:console.warn("SubmitOutcomes: Unknown quick action:",t)}}handleOutcomeAction(t){const e=t.target.textContent.trim().toLowerCase(),o=t.target.closest(".outcome-card").dataset.outcomeId;console.log(`SubmitOutcomes: ${e} action for outcome ${o}`)}exportOutcomes(){try{let t="Code,Title,Type,Description,Last Updated\\n";this.filteredOutcomes.forEach(a=>{const s=[a.code,a.title,a.type,a.description||"",a.updated_at].map(i=>`"${(i||"").toString().replace(/\"/g,'""')}"`);t+=s.join(",")+"\\n"});const e=new Blob([t],{type:"text/csv"}),o=window.URL.createObjectURL(e),r=document.createElement("a");r.href=o,r.download=`outcomes-${this.currentPeriod}-${new Date().toISOString().split("T")[0]}.csv`,document.body.appendChild(r),r.click(),document.body.removeChild(r),window.URL.revokeObjectURL(o),console.log("SubmitOutcomes: Outcomes exported successfully")}catch(t){console.error("SubmitOutcomes: Error exporting outcomes:",t)}}setLoading(t){this.loading=t;const e=document.getElementById("outcomes-grid");e&&t&&(e.innerHTML=`
                <div class="outcomes-loading">
                    <i class="fas fa-spinner fa-spin"></i>
                    <span class="outcomes-loading-text">Loading outcomes...</span>
                </div>
            `)}showError(t){const e=document.getElementById("outcomes-grid");e&&(e.innerHTML=`
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle"></i>
                    ${t}
                </div>
            `)}formatType(t){return t.split("_").map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(" ")}escapeHtml(t){const e=document.createElement("div");return e.textContent=t||"",e.innerHTML}destroy(){console.log("SubmitOutcomes: Module destroyed")}}class w{constructor(){this.charts=new Map,this.defaultColors=["#007bff","#28a745","#dc3545","#ffc107","#6f42c1","#fd7e14","#20c997","#6c757d","#343a40","#f8f9fa"]}createChart(t,e={}){if(!t||!window.Chart)return console.error("ChartManager: Canvas or Chart.js not available"),null;try{const o=this.buildChartConfig(e),r=new Chart(t,o),a=t.id||"chart_"+Date.now();return this.charts.set(a,r),console.log("ChartManager: Chart created successfully",a),r}catch(o){return console.error("ChartManager: Error creating chart:",o),null}}buildChartConfig(t){const{type:e="line",data:o={},columns:r=[],rows:a=[]}=t,s=this.prepareChartData(o,r,a);return{type:e,data:s,options:{responsive:!0,maintainAspectRatio:!1,plugins:{title:{display:!0,text:t.title||"Outcomes Data Visualization",font:{size:16,weight:"bold"}},legend:{display:r.length>1,position:"top",labels:{usePointStyle:!0,padding:20}},tooltip:{mode:"index",intersect:!1,backgroundColor:"rgba(0, 0, 0, 0.8)",titleColor:"white",bodyColor:"white",borderColor:"rgba(255, 255, 255, 0.1)",borderWidth:1,cornerRadius:6,caretPadding:10}},scales:this.getScaleConfig(e),interaction:{mode:"nearest",axis:"x",intersect:!1}}}}prepareChartData(t,e,o){const r=o.map(s=>s.label||s.month||""),a=[];return e.forEach((s,i)=>{const c=o.map(l=>{const u=l.data[s]||l.data[s.toLowerCase()]||"";return this.parseNumericValue(u)});a.push({label:s,data:c,borderColor:this.defaultColors[i%this.defaultColors.length],backgroundColor:this.defaultColors[i%this.defaultColors.length]+"20",borderWidth:2,pointRadius:4,pointHoverRadius:6,tension:.3,fill:!1})}),{labels:r,datasets:a}}getScaleConfig(t){const e={x:{display:!0,title:{display:!0,text:"Period"},grid:{color:"rgba(0, 0, 0, 0.1)"}},y:{display:!0,title:{display:!0,text:"Value"},grid:{color:"rgba(0, 0, 0, 0.1)"},beginAtZero:!0}};if(t==="bar")e.x.grid.display=!1;else if(t==="pie"||t==="doughnut")return{};return e}updateChart(t,e={}){if(!t){console.warn("ChartManager: No chart provided for update");return}try{const{data:o={},columns:r=[],rows:a=[]}=e,s=this.prepareChartData(o,r,a);t.data=s,t.update("resize"),console.log("ChartManager: Chart updated successfully")}catch(o){console.error("ChartManager: Error updating chart:",o)}}updateChartType(t,e,o={}){if(!t){console.warn("ChartManager: No chart provided for type change");return}try{if(t.config.type=e,t.config.options.scales=this.getScaleConfig(e),o.data||o.columns||o.rows){const{data:r={},columns:a=[],rows:s=[]}=o,i=this.prepareChartData(r,a,s);t.data=i}this.adjustDatasetStyling(t,e),t.update("resize"),console.log("ChartManager: Chart type changed to",e)}catch(r){console.error("ChartManager: Error changing chart type:",r)}}adjustDatasetStyling(t,e){t.data.datasets.forEach((o,r)=>{const a=this.defaultColors[r%this.defaultColors.length];switch(e){case"line":o.borderColor=a,o.backgroundColor=a+"20",o.borderWidth=2,o.pointRadius=4,o.fill=!1;break;case"bar":o.backgroundColor=a,o.borderColor=a,o.borderWidth=1;break;case"pie":case"doughnut":o.backgroundColor=this.defaultColors.slice(0,o.data.length),o.borderColor="#fff",o.borderWidth=2;break}})}parseNumericValue(t){if(typeof t=="number")return t;if(typeof t=="string"){const e=t.replace(/[,%$]/g,""),o=parseFloat(e);return isNaN(o)?0:o}return 0}exportChart(t,e="chart"){if(!t){console.warn("ChartManager: No chart provided for export");return}try{const o=document.createElement("a");o.download=e+".png",o.href=t.toBase64Image(),document.body.appendChild(o),o.click(),document.body.removeChild(o),console.log("ChartManager: Chart exported as",e+".png")}catch(o){console.error("ChartManager: Error exporting chart:",o)}}getChart(t){return this.charts.get(t)}destroyChart(t){const e=this.charts.get(t);e&&(e.destroy(),this.charts.delete(t),console.log("ChartManager: Chart destroyed",t))}destroy(){this.charts.forEach((t,e)=>{t.destroy(),console.log("ChartManager: Chart destroyed",e)}),this.charts.clear()}}class b extends g{constructor(){super("outcomes"),this.viewModule=null,this.editModule=null,this.submitModule=null,this.chartManager=null}init(){super.init(),this.initCommon();const t=this.getPageType();switch(t){case"view":this.initViewPage();break;case"edit":this.initEditPage();break;case"submit":this.initSubmitPage();break;default:console.warn("Unknown outcomes page type:",t)}}initCommon(){d(),this.chartManager=new w,this.setupErrorHandling(),document.body.classList.add("outcomes-page")}initViewPage(){this.viewModule=new p(this.chartManager),this.viewModule.init()}initEditPage(){this.editModule=new f(this.chartManager),this.editModule.init()}initSubmitPage(){this.submitModule=new v,this.submitModule.init()}getPageType(){const e=window.location.pathname.split("/").pop();return e.includes("view_outcome")||document.querySelector(".outcome-view-container")?"view":e.includes("edit_outcome")||document.querySelector(".outcome-edit-form")?"edit":e.includes("submit_outcomes")||document.querySelector(".outcomes-submit-container")?"submit":"unknown"}setupErrorHandling(){window.addEventListener("unhandledrejection",t=>{console.error("Outcomes module unhandled promise rejection:",t.reason),h("An unexpected error occurred. Please refresh the page and try again.","error")})}destroy(){super.destroy(),this.viewModule&&this.viewModule.destroy(),this.editModule&&this.editModule.destroy(),this.submitModule&&this.submitModule.destroy(),this.chartManager&&this.chartManager.destroy(),document.body.classList.remove("outcomes-page")}}document.addEventListener("DOMContentLoaded",()=>{window.outcomesModule=new b,window.outcomesModule.init()});

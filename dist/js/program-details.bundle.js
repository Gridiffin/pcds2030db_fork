class d{constructor(t){this.controller=t,this.programId=t.programId,this.APP_URL=t.APP_URL,this.cache=new Map}init(){console.log("Initializing Program Details Logic...")}async loadProgramStatus(){try{const t=await this.controller.apiCall(`/app/api/program_status.php?action=status&program_id=${this.programId}`);return this.renderStatus(t),t}catch(t){throw console.error("Error loading program status:",t),t}}renderStatus(t){const e=document.getElementById("program-status-badge"),s=document.getElementById("hold-point-info");if(!e)return;const o=t.status||"active",i=this.getStatusInfo(o);e.textContent=i.label,e.className=`badge status-badge bg-${i.class} py-2 px-3`;const a=e.querySelector("i");a&&(a.className=`${i.icon} me-1`),s&&t.active_hold_points&&t.active_hold_points.length>0&&this.renderHoldPointInfo(s,t.active_hold_points)}getStatusInfo(t){const e={active:{label:"Active",class:"success",icon:"fas fa-check-circle"},on_hold:{label:"On Hold",class:"warning",icon:"fas fa-pause-circle"},cancelled:{label:"Cancelled",class:"danger",icon:"fas fa-times-circle"},completed:{label:"Completed",class:"info",icon:"fas fa-flag-checkered"},not_started:{label:"Not Started",class:"secondary",icon:"fas fa-clock"}};return e[t]||e.active}renderHoldPointInfo(t,e){let s='<div class="alert alert-warning mt-2">';s+='<i class="fas fa-exclamation-triangle me-2"></i>',s+="<strong>Program is currently on hold:</strong><br>",e.forEach(o=>{s+=`<small>â€¢ ${o.reason}`,o.remarks&&(s+=` (${o.remarks})`),s+="</small><br>"}),s+="</div>",t.innerHTML=s}async loadStatistics(){try{const t=`stats_${this.programId}`;if(this.cache.has(t))return this.cache.get(t);const e=await this.controller.apiCall(`/app/ajax/get_program_stats.php?program_id=${this.programId}`);return this.cache.set(t,e),this.updateStatistics(e),e}catch(t){console.error("Error loading statistics:",t)}}updateStatistics(t){if(!t)return;const e=document.getElementById("last-activity-value");e&&t.last_activity&&(e.textContent=this.formatDate(t.last_activity));const s=document.querySelector(".stat-item .badge.bg-primary");s&&t.submission_count!==void 0&&(s.textContent=t.submission_count);const o=document.querySelector(".stat-item .badge.bg-info");o&&t.targets_count!==void 0&&(o.textContent=t.targets_count);const i=document.querySelector(".stat-item .badge.bg-secondary");i&&t.attachments_count!==void 0&&(i.textContent=t.attachments_count)}async deleteDraftSubmission(t){try{const e=await this.controller.apiCall("/app/ajax/delete_submission.php",{method:"POST",body:JSON.stringify({submission_id:t,program_id:this.programId})});if(e.success)this.controller.showSuccess("Draft submission deleted successfully"),setTimeout(()=>{window.location.reload()},1500);else throw new Error(e.message||"Failed to delete submission");return e}catch(e){throw console.error("Error deleting draft submission:",e),this.controller.showError("Failed to delete submission: "+e.message),e}}async loadSubmissionHistory(){try{const t=`history_${this.programId}`;if(this.cache.has(t))return this.cache.get(t);const e=await this.controller.apiCall(`/app/ajax/get_program_submission.php?program_id=${this.programId}&include_history=1`);return this.cache.set(t,e),e}catch(t){throw console.error("Error loading submission history:",t),t}}formatDate(t){if(!t)return"Never";try{return new Date(t).toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"})}catch{return t}}timeAgo(t){if(!t)return"Never";try{const e=new Date(t),o=Math.floor((new Date-e)/1e3);return o<60?"Just now":o<3600?`${Math.floor(o/60)} minutes ago`:o<86400?`${Math.floor(o/3600)} hours ago`:o<2592e3?`${Math.floor(o/86400)} days ago`:this.formatDate(t)}catch{return t}}clearCache(){this.cache.clear()}isValidProgramId(t){return t&&!isNaN(t)&&parseInt(t)>0}getFileIcon(t){return{"application/pdf":"fa-file-pdf","application/msword":"fa-file-word","application/vnd.openxmlformats-officedocument.wordprocessingml.document":"fa-file-word","application/vnd.ms-excel":"fa-file-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":"fa-file-excel","application/vnd.ms-powerpoint":"fa-file-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation":"fa-file-powerpoint","text/plain":"fa-file-alt","text/csv":"fa-file-csv","image/jpeg":"fa-file-image","image/png":"fa-file-image","image/gif":"fa-file-image","application/zip":"fa-file-archive","application/x-rar-compressed":"fa-file-archive"}[t]||"fa-file"}}class m{constructor(t){this.controller=t,this.programId=t.programId,this.isOwner=t.isOwner,this.canEdit=t.canEdit,this.APP_URL=t.APP_URL}init(){console.log("Initializing Program Details Modals..."),this.bindModalEvents(),this.initializeBootstrapModals()}bindModalEvents(){this.bindStatusHistoryModal(),this.bindEditStatusModal(),this.bindViewSubmissionsModal(),this.bindDeleteSubmissionButtons(),this.bindModalCleanup()}initializeBootstrapModals(){document.querySelectorAll(".modal").forEach(e=>{window.bootstrap&&window.bootstrap.Modal&&new window.bootstrap.Modal(e)})}bindStatusHistoryModal(){const t=document.getElementById("statusHistoryModal");t&&t.addEventListener("show.bs.modal",async e=>{const s=document.getElementById("status-history-modal-body");if(s){s.innerHTML=this.getLoadingHTML();try{const o=await this.controller.apiCall(`/app/api/program_status.php?action=history&program_id=${this.programId}`);this.renderStatusHistory(s,o)}catch(o){console.error("Error loading status history:",o),s.innerHTML=this.getErrorHTML("Failed to load status history.")}}})}bindEditStatusModal(){const t=document.getElementById("editStatusModal");!t||!this.canEdit||t.addEventListener("show.bs.modal",async e=>{const s=document.getElementById("edit-status-modal-body");if(s){s.innerHTML=this.getLoadingHTML();try{const o=await this.controller.apiCall(`/app/api/program_status.php?action=edit_form&program_id=${this.programId}`);this.renderEditStatusForm(s,o)}catch(o){console.error("Error loading edit status form:",o),s.innerHTML=this.getErrorHTML("Failed to load edit form.")}}})}bindViewSubmissionsModal(){document.querySelectorAll('[data-bs-target="#viewSubmissionModal"]').forEach(s=>{s.addEventListener("click",o=>{console.log("Opening view submission modal")})});const e=document.getElementById("viewSubmissionModal");e&&e.addEventListener("click",s=>{s.target.closest('a[href*="view_submissions.php"]')&&console.log("Navigating to submission view")})}bindDeleteSubmissionButtons(){document.addEventListener("click",async t=>{const e=t.target.closest(".delete-submission-btn");if(!e)return;t.preventDefault();const s=e.dataset.submissionId;if(!s){this.controller.showError("Invalid submission ID");return}if(!confirm("Are you sure you want to delete this draft submission? This action cannot be undone."))return;e.disabled=!0;const o=e.innerHTML;e.innerHTML='<i class="fas fa-spinner fa-spin"></i> Deleting...';try{await this.controller.logic.deleteDraftSubmission(s)}catch(i){console.error("Delete submission failed:",i)}finally{e.disabled=!1,e.innerHTML=o}})}bindModalCleanup(){document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("hidden.bs.modal",s=>{const o=e.querySelector(".modal-body");o&&o.querySelector(".loading-overlay")&&o.querySelectorAll(".loading-overlay").forEach(i=>{i.remove()})})})}renderStatusHistory(t,e){if(!e||!e.history||e.history.length===0){t.innerHTML=this.getEmptyStateHTML("No status history available");return}let s='<div class="timeline-container">';e.history.forEach((o,i)=>{const a=this.controller.logic.getStatusInfo(o.status);s+=`
                <div class="timeline-item">
                    <div class="timeline-marker">
                        <i class="${a.icon}"></i>
                    </div>
                    <div class="timeline-content">
                        <div class="timeline-header">
                            <h6 class="timeline-title">${a.label}</h6>
                            <span class="badge bg-${a.class}">${a.label}</span>
                        </div>
                        <div class="timeline-meta">
                            <small class="text-muted">
                                <i class="fas fa-clock me-1"></i>
                                ${this.controller.logic.formatDate(o.created_at)}
                                ${o.created_by?`<i class="fas fa-user ms-2 me-1"></i>${o.created_by}`:""}
                            </small>
                        </div>
                        ${o.remarks?`<p class="mt-2 mb-0">${o.remarks}</p>`:""}
                    </div>
                </div>
            `}),s+="</div>",t.innerHTML=s}renderEditStatusForm(t,e){const s=e.current_status||"active",o=e.available_statuses||[];let i=`
            <form id="edit-status-form">
                <div class="mb-3">
                    <label for="new-status" class="form-label">Program Status</label>
                    <select class="form-select" id="new-status" name="status" required>
        `;o.forEach(r=>{const c=this.controller.logic.getStatusInfo(r.value),n=r.value===s?"selected":"";i+=`<option value="${r.value}" ${n}>${c.label}</option>`}),i+=`
                    </select>
                </div>
                <div class="mb-3">
                    <label for="status-remarks" class="form-label">Remarks (optional)</label>
                    <textarea class="form-control" id="status-remarks" name="remarks" rows="3" 
                              placeholder="Add any notes about this status change..."></textarea>
                </div>
                <div class="d-flex justify-content-end gap-2">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Status</button>
                </div>
            </form>
        `,t.innerHTML=i;const a=document.getElementById("edit-status-form");a&&a.addEventListener("submit",r=>this.handleStatusFormSubmit(r))}async handleStatusFormSubmit(t){t.preventDefault();const e=t.target,s=new FormData(e),o=e.querySelector('button[type="submit"]');o.disabled=!0,o.innerHTML='<i class="fas fa-spinner fa-spin"></i> Updating...';try{const i=await this.controller.apiCall("/app/api/program_status.php",{method:"POST",body:JSON.stringify({action:"update",program_id:this.programId,status:s.get("status"),remarks:s.get("remarks")})});if(i.success){this.controller.showSuccess("Program status updated successfully");const a=bootstrap.Modal.getInstance(document.getElementById("editStatusModal"));a&&a.hide(),await this.controller.logic.loadProgramStatus()}else throw new Error(i.message||"Failed to update status")}catch(i){console.error("Error updating status:",i),this.controller.showError("Failed to update status: "+i.message)}finally{o.disabled=!1,o.innerHTML="Update Status"}}getLoadingHTML(){return`
            <div class="loading-overlay">
                <div class="loading-spinner"></div>
            </div>
        `}getErrorHTML(t){return`
            <div class="alert alert-danger" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                ${t}
            </div>
        `}getEmptyStateHTML(t){return`
            <div class="text-center text-muted py-4">
                <i class="fas fa-folder-open fa-2x mb-2"></i>
                <div>${t}</div>
            </div>
        `}showModal(t){const e=document.getElementById(t);e&&window.bootstrap&&new bootstrap.Modal(e).show()}hideModal(t){const e=document.getElementById(t);if(e&&window.bootstrap){const s=bootstrap.Modal.getInstance(e);s&&s.hide()}}}class h{constructor(t){this.controller=t,this.toastContainer=null,this.activeToasts=new Map}init(){console.log("Initializing Program Details Toast..."),this.createToastContainer()}createToastContainer(){this.toastContainer=document.getElementById("toast-container"),this.toastContainer||(this.toastContainer=document.createElement("div"),this.toastContainer.id="toast-container",this.toastContainer.className="toast-container position-fixed top-0 end-0 p-3",this.toastContainer.style.zIndex="1060",document.body.appendChild(this.toastContainer))}showSuccess(t,e=5e3){return this.showToast(t,"success",e)}showError(t,e=8e3){return this.showToast(t,"danger",e)}showWarning(t,e=6e3){return this.showToast(t,"warning",e)}showInfo(t,e=5e3){return this.showToast(t,"info",e)}showToastWithAction(t,e,s="info",o=1e4,i=null){return this.showToast(e,s,o,t,i)}showToast(t,e="info",s=5e3,o=null,i=null){const a=this.generateToastId(),r=this.createToastElement(a,t,e,o,i);this.toastContainer.appendChild(r);let c;return window.bootstrap&&window.bootstrap.Toast?(c=new bootstrap.Toast(r,{autohide:s>0,delay:s}),c.show()):(r.style.display="block",s>0&&setTimeout(()=>this.hideToast(a),s)),this.activeToasts.set(a,{element:r,bsToast:c,timer:s>0?setTimeout(()=>this.removeToast(a),s+500):null}),r.addEventListener("hidden.bs.toast",()=>{this.removeToast(a)}),a}createToastElement(t,e,s,o,i){const a=document.createElement("div");a.id=t,a.className=`toast align-items-center text-bg-${s} border-0`,a.setAttribute("role","alert"),a.setAttribute("aria-live","assertive"),a.setAttribute("aria-atomic","true");const r={success:"fas fa-check-circle",danger:"fas fa-exclamation-circle",warning:"fas fa-exclamation-triangle",info:"fas fa-info-circle"},c=r[s]||r.info;let n='<div class="d-flex">';return n+='<div class="toast-body d-flex align-items-center">',n+=`<i class="${c} me-2"></i>`,n+='<div class="flex-grow-1">',o&&(n+=`<div class="fw-bold">${this.escapeHtml(o)}</div>`),n+=`<div>${this.escapeHtml(e)}</div>`,i&&(n+='<div class="mt-2">',n+=`<a href="${i.url}" class="btn btn-sm btn-outline-light">${this.escapeHtml(i.text)}</a>`,n+="</div>"),n+="</div>",n+="</div>",n+='<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>',n+="</div>",a.innerHTML=n,a}hideToast(t){const e=this.activeToasts.get(t);e&&(e.bsToast?e.bsToast.hide():(e.element.style.display="none",this.removeToast(t)))}removeToast(t){const e=this.activeToasts.get(t);e&&(e.timer&&clearTimeout(e.timer),e.element&&e.element.parentNode&&e.element.parentNode.removeChild(e.element),this.activeToasts.delete(t))}hideAllToasts(){this.activeToasts.forEach((t,e)=>{this.hideToast(e)})}clearAllToasts(){this.activeToasts.forEach((t,e)=>{this.removeToast(e)}),this.toastContainer&&(this.toastContainer.innerHTML="")}generateToastId(){return`toast-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}showLoading(t="Loading..."){const e=this.generateToastId(),s=document.createElement("div");s.id=e,s.className="toast align-items-center text-bg-primary border-0",s.setAttribute("role","alert"),s.setAttribute("aria-live","assertive"),s.setAttribute("aria-atomic","true"),s.innerHTML=`
            <div class="d-flex">
                <div class="toast-body d-flex align-items-center">
                    <div class="spinner-border spinner-border-sm me-2" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div>${this.escapeHtml(t)}</div>
                </div>
            </div>
        `,this.toastContainer.appendChild(s);let o;return window.bootstrap&&window.bootstrap.Toast?(o=new bootstrap.Toast(s,{autohide:!1}),o.show()):s.style.display="block",this.activeToasts.set(e,{element:s,bsToast:o,timer:null}),e}updateLoadingToast(t,e,s="success"){if(this.activeToasts.get(t))return this.removeToast(t),this.showToast(e,s)}}window.showToast=function(l,t,e="info",s=5e3){if(window.programDetailsController&&window.programDetailsController.toast)return window.programDetailsController.toast.showToast(t,e,s,l);console.warn("Toast system not initialized")};window.showToastWithAction=function(l,t,e="info",s=1e4,o=null){if(window.programDetailsController&&window.programDetailsController.toast)return window.programDetailsController.toast.showToastWithAction(l,t,e,s,o);console.warn("Toast system not initialized")};class u{constructor(){this.programId=window.programId,this.isOwner=window.isOwner||!1,this.canEdit=window.canEdit||!1,this.currentUser=window.currentUser||{},this.APP_URL=window.APP_URL||"",this.logic=new d(this),this.modals=new m(this),this.toast=new h(this),this.init()}init(){console.log("Initializing Program Details page...");try{this.logic.init(),this.modals.init(),this.toast.init(),this.bindEvents(),this.loadInitialData(),console.log("Program Details page initialized successfully")}catch(t){console.error("Error initializing Program Details page:",t),this.showError("Failed to initialize page. Please refresh and try again.")}}bindEvents(){window.addEventListener("unhandledrejection",t=>{console.error("Unhandled promise rejection:",t.reason),this.showError("An unexpected error occurred. Please try again.")}),window.addEventListener("popstate",t=>{this.refreshData()}),document.addEventListener("visibilitychange",()=>{document.hidden||this.refreshData()})}async loadInitialData(){try{await this.logic.loadProgramStatus(),await this.logic.loadStatistics()}catch(t){console.error("Error loading initial data:",t),this.showError("Failed to load some data. Please refresh the page.")}}async refreshData(){try{console.log("Refreshing program details data..."),await this.loadInitialData()}catch(t){console.error("Error refreshing data:",t)}}showError(t){this.toast&&typeof this.toast.showError=="function"?this.toast.showError(t):alert(t)}showSuccess(t){this.toast&&typeof this.toast.showSuccess=="function"?this.toast.showSuccess(t):console.log("Success:",t)}showInfo(t){this.toast&&typeof this.toast.showInfo=="function"?this.toast.showInfo(t):console.log("Info:",t)}async apiCall(t,e={}){const s=`${this.APP_URL}${t}`,i={...{headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"},...e};try{const a=await fetch(s,i);if(!a.ok)throw new Error(`HTTP error! status: ${a.status}`);return await a.json()}catch(a){throw console.error("API call failed:",a),a}}}document.addEventListener("DOMContentLoaded",()=>{typeof window.programId<"u"&&window.programId&&(window.programDetailsController=new u)});
